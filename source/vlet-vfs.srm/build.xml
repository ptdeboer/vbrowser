<project name="vlet-vfs.srm" default="dist" basedir=".">
    <description>
        Project   : VLET/VBrowser
        Component : SRM VRS Plugin. 
 
    </description>

    <property name="vrsfactory.root" location="." />
    <property name="project.root" value="../mbuild" />
    <property environment="env" />
    <property file="${project.root}/project.prop" />
    <property file="build.prop" />

    <!-- Target: init -->
    <target name="init">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${vrsfactory.build}" />
        <mkdir dir="${vrsfactory.dist}" />
        <mkdir dir="${vrsfactory.dist}/lib" />
        <!-- <mkdir dir="${vrsfactory.dist}/lib" /> -->
    </target>

    <!--
         Target: source-dist (Only needed when creating source distributions) 
      -->
    <target name="source-dist">
    </target>


    <path id="vrsfactory.classpath">
        <!-- include project libraries-->
        <fileset dir="${project.dist.lib}">
            <include name="**/*.jar" />
        </fileset>

        <!-- Moved to seperate srm project! -->
        <!-- <fileset dir="${vrsfactory.lib}">
             <include name="**/*.jar" />
         </fileset> -->

        <!-- add local paths settings -->

        <pathelement location="${vrsfactory.build}" />
        <pathelement location="${vrsfactory.src}" />

    </path>

    <!--
        Target = Compilation 
    -->
    <target name="build" depends="init" description="compile the source ">
        
        <!-- Compile the java code from the ${src} into ${build} -->
        <javac srcdir="${vrsfactory.src}" 
            	destdir="${vrsfactory.build}" 
            	compiler="${javac.compiler}" 
            	debug="${javac.debug}" 
            	source="${javac.source}" 
            	target="${javac.target}">
            <classpath refid="vrsfactory.classpath" />
        </javac>

    </target>

    <target name="jar" depends="build">
        <!-- Create application JAR file -->
        <jar jarfile="${vrsfactory.dist}/lib/${vrsfactory.artefactId}.jar" 
             basedir="${vrsfactory.build}">
            <!-- .. includes/excludes .. -->
        </jar>
    </target>

    <target name="dist" depends="vrsfactory-dist">
    </target>

    <target name="vrsfactory-dist" depends="build,jar">

        <property name="vrsfactory.dir" value="${vrsfactory.dist}/${vrsfactory.artefactId}" />
        <mkdir dir="${vrsfactory.dir}" />

        <!-- Add extra files from etc -->
        <!--
		 <copy todir="${vrsfactory.dir}">
        	<fileset dir="${vrsfactory.root}/etc" /> 
		 </copy> 
        -->

        <!-- Add external libs -->
        <!-- 
    	 <copy todir="${vrsfactory.dir}">
             <fileset dir="${vrsfactory.root}/lib" /> 
         </copy>
        -->

        <!-- Add vrsfactory libs  -->
        <copy todir="${vrsfactory.dir}">
            <fileset dir="${vrsfactory.dist}/lib" />
        </copy>

        <!-- create plugin.prop file -->
        <property name="plugininfo" value="${vrsfactory.dir}/plugin.prop" />

        <echo message="##${line.separator}#Plugin description for: ${vrsfactory.artefactId}${line.separator}#${line.separator}" file="${plugininfo}" append="false" />
        <echo message="#Plugin name:${line.separator}vrsfactory.name=${vrsfactory.artefactId}${line.separator}${line.separator}" file="${plugininfo}" append="true" />
        <echo message="#Plugin package name:${line.separator}vrsfactory.package=${vrsfactory.package}${line.separator}${line.separator}" file="${plugininfo}" append="true" />
        <echo message="#Plugin (VRS)Factory name (Must be subclass of VRSFactory which will be registered in the VRS Registry!):${line.separator}vrsfactory.factory=${vrsfactory.factory}${line.separator}${line.separator}" file="${plugininfo}" append="true" />

    </target>

    <!--
    *    Target: vrsfactory-dist-install
    *    Info:
    *          Install into plugin directory
    -->
    <target name="vrsfactory-dist-install" depends="vrsfactory-dist" description="install libraries">
        <fail message="*** Error: property 'project.root' not defined. Please start with '-Dproject.root=&lt;path&gt;' argument. " unless="project.env.ok" />

        <property name="vrsfactory.installdir" value="${project.dist.vdrivers}"/>
        
        <!-- install in lib/plugins/  -->
        <mkdir dir="${vrsfactory.installdir}" />

        <!-- 
			Register plugin! do this by creating a plugin directory 
            and copy the properties file there. 
    	  -->
        <mkdir dir="${vrsfactory.installdir}/${vrsfactory.artefactId}" />

        <copy todir="${vrsfactory.installdir}/${vrsfactory.artefactId}">
            <resources>
                <fileset dir="${vrsfactory.dist}/${vrsfactory.artefactId}">
                    <!-- <include name="plugin.prop"/> -->
                </fileset>
            </resources>
        </copy>

    </target>

    <target name="dist-install" depends="dist,vrsfactory-dist-install" description="install libraries">
        <fail message="*** Error: property 'project.root' not defined. Please start with '-Dproject.root=&lt;path&gt;' argument. " unless="project.env.ok" />

        <!-- dist-install done by target dependencies -->
        <!-- 
   			optional dist install *here * 
   		  -->

    </target>

    <target name="clean" description="clean">
        <delete dir="${vrsfactory.dist}" />
        <delete dir="${vrsfactory.build}" />
    </target>

</project>


