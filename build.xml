<project name="vbrowser" default="dist-install" basedir=".">
    <description>
        Project        : VBrowser
        Component      : root build file
        
        See build.prop for custom properties. 
        
    </description>

    <!-- Toplevel build is *here* -->
    <property name="project.root" location="." />
    <property environment="env" />
    <!-- custom properties, read before project.prop -->
    <property file="build.prop" />
	<!-- toplevel build properties -->
    <property file="${project.root}/project.prop" />

    <import file="modules.xml" />
    
    <!-- Target: init -->
    <target name="init">

        <echo message="======================================"/>
        <echo message="*** Ant Build is broker, use maven ***"/>
        <echo message="======================================"/>
	<fail> Ant build is broken </fail> 

        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${project.dist}" />
        <mkdir dir="${project.dist.lib}" />
        <mkdir dir="${project.dist.etc}" />
        <mkdir dir="${project.dist.bin}" />
        <mkdir dir="${project.dist.doc}" />

        <!-- project defaults -->
        <property name="project.sourcedir" value="${project.root}" />

        <tstamp>
            <format property="project.tstamp" pattern="yyyy-MM-dd HH:mm:ss" locale="en" />
        </tstamp>

        <tstamp>
            <format property="project.time.number" pattern="yyyyMMddHHmmss" locale="en" />
        </tstamp>
        <echo message="=============================================================="/>
        <echo message="=== VBrowser: ${project.version} "/>
        <echo message="=============================================================="/>
        <echo message=" project root         = ${project.root}"/>
        <echo message=" project dist         = ${project.dist}"/>
        <echo message=" project sourceroot   = ${project.sourcedir}"/>
        <echo message=" --- auxlibs --- "/>
        <echo message=" platinum.install     = ${platinum.install}"/>

    </target>
    
    <target name="dist-install" depends="init,modules-dist-install,root-dist-install" />
    
    <target name="modules-dist-install" depends="init">

        <antcall target="doModules">
            <param name="target" value="dist-install" />
        </antcall>

    </target>

	<target name="root-dist-install" depends="init"> 
	    
        <filterset id="vbrowser-tokens">
            <!-- nifty:  ant filterset (keyword subtitution) while copying files ! -->
            <filter token="VBROWSER_VERSION" value="${project.version}" />
            <filter token="VBROWSER_DATE" value="${project.tstamp}" />
        </filterset>
	    
        <!-- Copy files to root of distribution -->
        <copy todir="${project.dist}" verbose="true">
            <fileset file="NOTICE.txt" />
            <fileset file="README.txt" />
            <fileset file="ReleaseNotes.txt" />
            
            <filterset refid="vbrowser-tokens" />
    
        </copy>
 
    </target>

    <target name="test" depends="clean,modules-test" />
        
    <target name="modules-test" depends="init">

        <antcall target="doModules-test">
            <param name="target" value="test" />
        </antcall>

    </target>

    <target name="clean" depends="modules-clean" description="Clean All">

        <delete dir="${project.dist}" />

    </target>
            
    <target name="modules-clean" depends="init">

        <antcall target="doModules">
            <param name="target" value="clean" />
        </antcall>

    </target>

    <target name="dist-zip" depends="dist-install">

        <mkdir dir="packs" />

        <!-- zippit -->
        <property name="distro.prefix" value="vbrowser" />
        <property name="distro.zip.prefix" value="vbrowser" />
        <!-- derived -->
        <property name="distro.zip.root" value="${distro.prefix}-${project.version}" />
        <property name="distro.zip.filename" value="${distro.zip.prefix}-${project.version}" />

        <zip destfile="packs/${distro.zip.filename}.zip">
            <!-- Add all excluding shell scripts and other executables -->
            <zipfileset dir="${project.dist}" filemode="644" prefix="${distro.zip.filename}" excludes="bin/**,*.sh" />

            <!-- Now add 'bin' shell scrips with x permissions ! -->
            <zipfileset dir="${project.dist}/bin" filemode="755" prefix="${distro.zip.root}/bin" />
            <!-- Now add root shell scrips with x permissions ! -->

            <zipfileset dir="${project.dist}/" filemode="755" prefix="${distro.zip.root}" includes="*.sh">
            </zipfileset>

        </zip>

    </target>

</project>


